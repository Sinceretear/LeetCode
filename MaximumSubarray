Given an integer array nums, find the contiguous subarray (containing at least one number) which has the largest sum and return its sum.

A subarray is a contiguous part of an array.

Example 1:

Input: nums = [-2,1,-3,4,-1,2,1,-5,4]
Output: 6
Explanation: [4,-1,2,1] has the largest sum = 6.



code:

class Solution {
    func maxSubArray(_ nums: [Int]) -> Int {
        
        var tempSum = nums[0]
        var maxSum = nums[0]
        
        for i in 0..<nums.count {
            tempSum = max(tempSum + nums[i], nums[i])
            maxSum = max(tempSum, maxSum)
        }
        
        return maxSum
        
    }
}
undersatdn the problem really dont know how this shit works
